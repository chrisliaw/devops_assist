
require_relative '../lib/devops_assist'

namespace :devops do
  namespace :vcs do

    desc "Checking in changes of source code"
    task :checkin_changes do
      cli = DevopsAssist::Vcs::Git::CliPrompt.new 
      cli.commit(Dir.getwd) do |ops|
        case ops
        when :raise_to_parent
          true
        end
      end
    end

    desc "Checking in files generated by devops assist"
    task :checkin_misc_files  do |t, args|

      root = args[:root]
      files = args[:files]
      ver = args[:version]
      ws = args[:workspace]
      pmt = args[:pmt]

      begin
      #ws = Gvcs::Workspace.new(root)
      #if ws.is_workspace?
        ws.add_to_staging(files)
        ws.commit("  Committing file changed during release version '#{ver}'")
      #else
      #  raise DevopsAssist::Error, "  Given path '#{root}' is not a repository"
      #end
      rescue Exception => ex
        pmt.say "\n Error during checking in misc files. Error waas : #{ex.message}", color: :red
      end

    end

    desc "Tag source code"
    task :tag_source_code do |t, args|
  
      root = args[:root]
      ver = args[:version]
      ws = args[:workspace]
      pmt = args[:pmt]

      begin
        msg = pmt.ask("  Tagging message : ", default: "Automated tagging of source code release version #{ver} by DevOps Assist")
        ws.create_tag(ver, msg)
      rescue Exception => ex
        pmt.say "\n Error while tagging source code. Error was : #{ex.message}"
      end

    end

    desc "Push source code to repository"
    task :push_source_code do |t, args|

      root = args[:root]
      pmt = args[:pmt]

      begin
        cli = DevopsAssist::Vcs::Git::CliPrompt.new
        cli.push(root) do |ops, val|
          case ops
          when :push_info
            pmt.say "  Source code push to remote repository '#{val[:name]}'", color: :yellow
          end
        end
      rescue Exception => ex
        pmt.say "\n Error while pushing source code. Error was : #{ex.message}", color: :red
      end

    end

  end
end
